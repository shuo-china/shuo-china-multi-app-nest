generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model File {
  id           Int      @id @default(autoincrement())
  originalName String
  fileName     String
  path         String
  extension    String
  mime         String
  size         Int
  isImage      Boolean
  width        Int?
  height       Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Error {
  id        Int      @id @default(autoincrement())
  name      String
  message   String   @db.Text
  stack     String   @db.LongText
  path      String?
  params    String?
  query     String?  @db.LongText
  body      String?  @db.LongText
  createdAt DateTime @default(now())
}

model AdminUser {
  id        Int                 @id @default(autoincrement())
  username  String              @unique
  password  String
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  roles     AdminRolesOnUsers[]

  @@map("admin_user")
}

model AdminRole {
  id        Int                 @id @default(autoincrement())
  code      String              @unique
  name      String
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  users     AdminRolesOnUsers[]

  @@map("admin_role")
}

model AdminRolesOnUsers {
  user      AdminUser @relation(fields: [userId], references: [id])
  userId    Int
  role      AdminRole @relation(fields: [roleId], references: [id])
  roleId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@id([userId, roleId])
  @@map("admin_roles_on_users")
}

model WeappUser {
  id        Int      @id @default(autoincrement())
  openid    String   @unique
  nickname  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("weapp_user")
}
